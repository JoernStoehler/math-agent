#!/bin/bash
set -e

echo "üöÄ Setting up Math Agent environment..."

# Make scripts executable
if [ -d "/workspaces/math-agent/src" ]; then
    chmod +x /workspaces/math-agent/src/*.sh 2>/dev/null || true
fi

# Install Python dependencies if requirements.txt exists
if [ -f "/workspaces/math-agent/requirements.txt" ]; then
    echo "üì¶ Installing Python dependencies..."
    pip install -r /workspaces/math-agent/requirements.txt
fi

# Create .env file from template if it doesn't exist
if [ ! -f "/workspaces/math-agent/.env" ] && [ -f "/workspaces/math-agent/.env.example" ]; then
    echo "üìù Creating .env file from template..."
    cp /workspaces/math-agent/.env.example /workspaces/math-agent/.env
fi

# Create necessary directories
echo "üìÅ Creating necessary directories..."
mkdir -p /workspaces/math-agent/jobs

# Test LaTeX installation
echo "üß™ Testing LaTeX installation..."
if command -v pdflatex >/dev/null 2>&1; then
    echo "‚úÖ LaTeX is installed"
else
    echo "‚ùå LaTeX installation failed"
fi

# Test cloudflared installation
echo "üß™ Testing cloudflared installation..."
if command -v cloudflared >/dev/null 2>&1; then
    echo "‚úÖ cloudflared is installed"
    # Check authentication
    if [ -f "$HOME/.cloudflared/cert.pem" ] || cloudflared tunnel list >/dev/null 2>&1; then
        echo "‚úÖ Cloudflared is authenticated"
    else
        echo "‚ö†Ô∏è  Cloudflared needs authentication. Run: cloudflared tunnel login"
    fi
else
    echo "‚ùå cloudflared installation failed"
fi

# Test Claude CLI
echo "üß™ Testing Claude CLI..."
if command -v claude >/dev/null 2>&1; then
    echo "‚úÖ Claude CLI is installed"
    # Check authentication
    if [ -f "$HOME/.claude/.credentials.json" ]; then
        echo "‚úÖ Claude is authenticated"
    else
        echo "‚ö†Ô∏è  Claude needs authentication. Run: claude (and follow the prompts)"
    fi
else
    echo "‚ùå Claude CLI installation failed"
fi

# Test Gemini CLI
echo "üß™ Testing Gemini CLI..."
if command -v gemini >/dev/null 2>&1; then
    echo "‚úÖ Gemini CLI is installed"
    # Check for API key or Google auth
    if [ -n "$GEMINI_API_KEY" ]; then
        echo "‚úÖ Gemini is configured with API key"
    elif [ -f "$HOME/.config/gcloud/application_default_credentials.json" ]; then
        echo "‚úÖ Gemini is configured with Google Cloud credentials"
    else
        echo "‚ö†Ô∏è  Gemini needs authentication. Either:"
        echo "    - Set GEMINI_API_KEY environment variable"
        echo "    - Or run: gemini (and login with Google account)"
        echo "    - Or run: gcloud auth application-default login"
    fi
else
    echo "‚ùå Gemini CLI installation failed"
fi

# Test GitHub CLI
echo "üß™ Testing GitHub CLI..."
if command -v gh >/dev/null 2>&1; then
    echo "‚úÖ GitHub CLI is installed"
    # Check authentication
    if gh auth status >/dev/null 2>&1; then
        echo "‚úÖ GitHub CLI is authenticated"
    else
        echo "‚ö†Ô∏è  GitHub CLI needs authentication. Run: gh auth login"
    fi
else
    echo "‚ùå GitHub CLI installation failed"
fi

echo ""
echo "‚ú® Math Agent environment setup complete!"
echo ""
echo "Quick start:"
echo "  - Run './src/math-agent-simple.sh' to process a single exercise"
echo "  - Run 'python src/server.py' to start the web dashboard"
echo "  - Read CLAUDE.md for detailed documentation"